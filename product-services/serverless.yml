service: products-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  region: ap-south-1
  stage: dev
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 'sqs:*'
      Resource: ['arn:aws:sqs:ap-south-1:087635793636:batch-product-queue']
  memorySize: 256
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DB_NAME: ${self:custom.DB_NAME}
    DB_USER: ${self:custom.DB_USERNAME}
    DB_PASS: ${self:custom.DB_PASSWORD}
    DB_PORT: ${self:custom.DB_PORT}

custom:
  DB_NAME: e_commerce_dev
  DB_USERNAME: postgres
  DB_PASSWORD: admin123
  DB_PORT: 5432

functions:
  createTablesInDB:
    handler: handlers/createTables.createTablesInDB
    events:
      - httpApi:
          path: /create-tables
          method: get
  insertFakeProductsInDB:
    handler: handlers/dbSeeder.insertFakeItemsInDB
    events:
      - httpApi:
          path: /db-seed
          method: get
  products:
    handler: handlers/products.getProductsList
    events:
      - httpApi:
          path: /products
          method: get
  createNewProduct:
    handler: handlers/addNewProduct.createProduct
    events:
      - httpApi:
          path: /products/create
          method: post
      - sqs:
          batchSize: 5
          arn: 'arn:aws:sqs:ap-south-1:087635793636:batch-product-queue'
  productById:
    handler: handlers/productById.getProductsById
    events:
      - httpApi:
          path: /products/{id}
          method: get
  deleteProduct:
    handler: handlers/removeProduct.deleteProduct
    events:
      - httpApi:
          path: /products/{id}
          method: delete
  updateProduct:
    handler: handlers/updateProduct.updateProduct
    events:
      - httpApi:
          path: /products/{id}
          method: put
